[tool.poetry]
name = "sample-project"
version = "0.9.0"
description = "Python Sample Project"
authors = ["KAWAI Shun <mypaceshun@gmail.com>"]
license = "MIT"
readme = "README.rst"
repository = "https://github.com/mypaceshun/sample-project"
documentation = "https://mypaceshun-sample-project.readthedocs.io/"
keywords = [
  "Python",
  "sample",
]
packages = [
  { include = "sample_project", from = "src" }
]
include = [
  "CHANGELOG.rst",
]

[tool.poetry.dependencies]
python = "^3.8"
click = "^8.1.3"

[tool.poetry.dev-dependencies]
flake8 = "^4.0.1"
pyproject-flake8 = "^0.0.1-alpha.4"
isort = "^5.10.1"
autoflake = "^1.4"
black = "^22.6.0"
pre-commit = "^2.20.0"
poethepoet = "^0.16.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
mypy = "^0.971"
types-setuptools = "^63.2.0"
Sphinx = "^5.0.2"

[tool.poetry.scripts]
command = "sample_project.command:cli"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[tool.poe.tasks.test]
cmd = "pytest -v --cov=src/ --cov-report=html --cov-report=xml --cov-report=term tests/"
help = "run test"

[tool.poe.tasks.lint]
sequence = [
  { cmd = "pflake8 src/ tests/" },
  { cmd = "mypy src/" }
]
help = "check syntax"
ignore_fail = "return_non_zero"

[tool.poe.tasks.format]
sequence = [ 
  { cmd = "autoflake -ir --remove-all-unused-imports --ignore-init-module-imports src/ tests/" },
  { cmd = "isort src/ tests/" },
  { cmd = "black src/ tests/" },
  "lint"
]
help = "format code style"

[tool.poe.tasks.doc]
sequence = [
  { cmd = "sphinx-apidoc -f -e -o docs/ src/sample_project/"},
  { cmd = "sphinx-build docs/ build-docs/"},
]
help = "build document"

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 88

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
